{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/philly.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'node-fetch';\nimport Layout from '../components/layout';\n\nvar Philly = function Philly(_ref) {\n  var weather = _ref.weather;\n  var current = weather.current,\n      daily = weather.daily,\n      hourly = weather.hourly;\n  console.log(weather);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Philadelphia Weather\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Temp: \", current.feels_like), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Weather: \", current.weather.main)));\n};\n\n_c = Philly;\n\nPhilly.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var res, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=39.95&lon=-75.16&appid=\".concat(process.env.WEATHER_API, \"&units=imperial\"));\n\n          case 2:\n            res = _context.sent;\n            _context.next = 5;\n            return res.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              weather: data\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Philly;\n\nvar _c;\n\n$RefreshReg$(_c, \"Philly\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/philly.js"],"names":["fetch","Layout","Philly","weather","current","daily","hourly","console","log","feels_like","main","getInitialProps","context","process","env","WEATHER_API","res","json","data"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAAA,MACtBC,OADsB,GACKD,OADL,CACtBC,OADsB;AAAA,MACbC,KADa,GACKF,OADL,CACbE,KADa;AAAA,MACNC,MADM,GACKH,OADL,CACNG,MADM;AAE9BC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,OAAO,CAACK,UAAnB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcL,OAAO,CAACD,OAAR,CAAgBO,IAA9B,CAFF,CAFF,CADF;AASD,CAZD;;KAAMR,M;;AAcNA,MAAM,CAACS,eAAP;AAAA,uEAAyB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACLZ,KAAK,sFAA+Ea,OAAO,CAACC,GAAR,CAAYC,WAA3F,qBADA;;AAAA;AACjBC,YAAAA,GADiB;AAAA;AAAA,mBAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,YAAAA,IAFiB;AAAA,6CAGhB;AACLf,cAAAA,OAAO,EAAEe;AADJ,aAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAAA;AAAA;AAAA;AAAA;;AAQA,eAAehB,MAAf","sourcesContent":["import fetch from 'node-fetch';\n\nimport Layout from '../components/layout';\n\nconst Philly = ({ weather }) => {\n  const { current, daily, hourly } = weather;\n  console.log(weather);\n  return (\n    <Layout>\n      <h1>Philadelphia Weather</h1>\n      <div>\n        <p>Temp: { current.feels_like }</p>\n        <p>Weather: { current.weather.main }</p>\n      </div>\n    </Layout>\n  )\n}\n\nPhilly.getInitialProps = async (context) => {\n  const res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=39.95&lon=-75.16&appid=${process.env.WEATHER_API}&units=imperial`);\n  const data = await res.json();\n  return {\n    weather: data\n  }\n}\n\nexport default Philly;"]},"metadata":{},"sourceType":"module"}