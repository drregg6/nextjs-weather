{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/hourly.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport hourlyStyles from './hourly.module.scss';\nimport Layout from '../../components/layout/layout';\n\nvar Hourly = function Hourly(_ref) {\n  var location = _ref.location,\n      hourly = _ref.hourly;\n  console.log(hourly);\n  var datetime = Date.now();\n  var _location$components = location.components,\n      city = _location$components.city,\n      state = _location$components.state;\n  var link;\n\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/city/weather?city=\".concat(city),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: hourlyStyles.back,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 49\n    }\n  }, \"\\u2190 Go back\")), __jsx(\"h1\", {\n    className: hourlyStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, link.toUpperCase()), __jsx(\"div\", {\n    className: hourlyStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, hourly.map(function (hour, idx) {\n    return __jsx(\"div\", {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, __jsx(Moment, {\n      add: {\n        hours: \"\".concat(idx + 1)\n      },\n      format: \"H:mm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, datetime)), __jsx(\"img\", {\n      src: getIcon(hour.weather[0].icon),\n      alt: hour.weather[0].description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), __jsx(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }, hour.weather[0].description), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, \"Temp: \", Math.floor(hour.temp), \"\\xB0\"));\n  })));\n};\n\n_c = Hourly;\nexport var __N_SSP = true;\nexport default Hourly;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hourly\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/hourly.js"],"names":["Link","Moment","getIcon","capitalize","hourlyStyles","Layout","Hourly","location","hourly","console","log","datetime","Date","now","components","city","state","link","undefined","toLowerCase","back","title","toUpperCase","container","map","hour","idx","hours","weather","icon","description","Math","floor","temp"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA0B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAMG,QAAQ,GAAGC,IAAI,CAACC,GAAL,EAAjB;AAFuC,6BAGfN,QAAQ,CAACO,UAHM;AAAA,MAG/BC,IAH+B,wBAG/BA,IAH+B;AAAA,MAGzBC,KAHyB,wBAGzBA,KAHyB;AAIvC,MAAIC,IAAJ;;AACA,MAAIF,IAAI,KAAKG,SAAb,EAAwB;AACtBD,IAAAA,IAAI,GAAGF,IAAI,CAACI,WAAL,EAAP;AACD,GAFD,MAEO;AACLF,IAAAA,IAAI,GAAGD,KAAK,CAACG,WAAN,EAAP;AACD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,+BAAwBJ,IAAxB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0C;AAAG,IAAA,SAAS,EAAEX,YAAY,CAACgB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1C,CADF,EAEE;AAAI,IAAA,SAAS,EAAEhB,YAAY,CAACiB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCJ,IAAI,CAACK,WAAL,EAArC,CAFF,EAGE;AAAK,IAAA,SAAS,EAAElB,YAAY,CAACmB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIf,MAAM,CAACgB,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AACxB,WACE;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE;AAAEC,QAAAA,KAAK,YAAKD,GAAG,GAAC,CAAT;AAAP,OAAb;AAAoC,MAAA,MAAM,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDf,QAAnD,CAAJ,CADF,EAEE;AAAK,MAAA,GAAG,EAAET,OAAO,CAACuB,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBC,IAAjB,CAAjB;AAAyC,MAAA,GAAG,EAAEJ,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBE,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQL,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBE,WAAxB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUC,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACQ,IAAhB,CAAV,SAJF,CADF;AAQD,GATD,CAFJ,CAHF,CADF;AAoBD,CA9BD;;KAAM3B,M;;AAmDN,eAAeA,MAAf","sourcesContent":["import Link from 'next/link';\nimport Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport hourlyStyles from './hourly.module.scss';\n\nimport Layout from '../../components/layout/layout';\n\nconst Hourly = ({ location, hourly }) => {\n  console.log(hourly)\n  const datetime = Date.now();\n  const { city, state } = location.components;\n  let link;\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n  return (\n    <Layout>\n      <Link href={`/city/weather?city=${city}`}><a className={hourlyStyles.back}>&#8592; Go back</a></Link>\n      <h1 className={hourlyStyles.title}>{ link.toUpperCase() }</h1>\n      <div className={hourlyStyles.container}>\n        {\n          hourly.map((hour, idx) => {\n            return (\n              <div key={idx}>\n                <h2><Moment add={{ hours: `${idx+1}` }} format=\"H:mm\">{datetime}</Moment></h2>\n                <img src={getIcon(hour.weather[0].icon)} alt={hour.weather[0].description} />\n                <small>{hour.weather[0].description}</small>\n                <p>Temp: {Math.floor(hour.temp)}&deg;</p>\n              </div>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0].components,\n      hourly: weather_data.hourly\n    }\n  }\n}\n\nexport default Hourly;"]},"metadata":{},"sourceType":"module"}