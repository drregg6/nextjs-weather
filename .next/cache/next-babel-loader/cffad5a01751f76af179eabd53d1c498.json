{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Moment from 'react-moment';\nimport Layout from '../../components/layout/layout';\n\nvar Daily = function Daily(_ref) {\n  var location = _ref.location,\n      daily = _ref.daily;\n  var datetime = Date.now();\n  var _location$components = location.components,\n      city = _location$components.city,\n      state = _location$components.state;\n  var link;\n\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/city/weather?city=\".concat(city),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 49\n    }\n  }, \"Go back\")), daily.map(function (day, idx) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, __jsx(Moment, {\n      add: {\n        days: \"\".concat(idx + 1)\n      },\n      format: \"dddd\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 22\n      }\n    }, datetime)), __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, __jsx(Moment, {\n      add: {\n        days: \"\".concat(idx + 1)\n      },\n      format: \"DD MMM\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }, datetime)));\n  }));\n};\n\n_c = Daily;\nexport var __N_SSP = true;\nexport default Daily;\n\nvar _c;\n\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js"],"names":["Link","Moment","Layout","Daily","location","daily","datetime","Date","now","components","city","state","link","undefined","toLowerCase","map","day","idx","days"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAyB;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACrC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,EAAjB;AADqC,6BAEbJ,QAAQ,CAACK,UAFI;AAAA,MAE7BC,IAF6B,wBAE7BA,IAF6B;AAAA,MAEvBC,KAFuB,wBAEvBA,KAFuB;AAGrC,MAAIC,IAAJ;;AACA,MAAIF,IAAI,KAAKG,SAAb,EAAwB;AACtBD,IAAAA,IAAI,GAAGF,IAAI,CAACI,WAAL,EAAP;AACD,GAFD,MAEO;AACLF,IAAAA,IAAI,GAAGD,KAAK,CAACG,WAAN,EAAP;AACD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,+BAAwBJ,IAAxB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1C,CADF,EAGIL,KAAK,CAACU,GAAN,CAAU,UAACC,GAAD,EAAMC,GAAN,EAAc;AACtB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE;AAAEC,QAAAA,IAAI,YAAKD,GAAG,GAAG,CAAX;AAAN,OAAb;AAAqC,MAAA,MAAM,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDX,QAApD,CAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE;AAAEY,QAAAA,IAAI,YAAKD,GAAG,GAAG,CAAX;AAAN,OAAb;AAAqC,MAAA,MAAM,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsDX,QAAtD,CAAJ,CAFF,CADF;AAMD,GAPD,CAHJ,CADF;AAeD,CAxBD;;KAAMH,K;;AA6CN,eAAeA,KAAf","sourcesContent":["import Link from 'next/link';\nimport Moment from 'react-moment';\n\nimport Layout from '../../components/layout/layout';\n\nconst Daily = ({ location, daily }) => {\n  const datetime = Date.now();\n  const { city, state } = location.components;\n  let link;\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n  return (\n    <Layout>\n      <Link href={`/city/weather?city=${city}`}><a>Go back</a></Link>\n      {\n        daily.map((day, idx) => {\n          return (\n            <div>\n              <small><Moment add={{ days: `${idx + 1}` }} format=\"dddd\">{datetime}</Moment></small>\n              <h2><Moment add={{ days: `${idx + 1}` }} format=\"DD MMM\">{datetime}</Moment></h2>\n            </div>\n          )\n        })\n      }\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0],\n      daily: weather_data.daily\n    }\n  }\n}\n\nexport default Daily;"]},"metadata":{},"sourceType":"module"}