{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/hourly/hour.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport { roundToHour } from '../../utils/dateHelper';\nimport hourStyles from './hour.module.scss';\n\nconst Hour = ({\n  idx,\n  datetime,\n  icon,\n  desc,\n  temp,\n  isFahrenheit,\n  isCelsius,\n  feelsLike,\n  windSpd,\n  windDeg\n}) => {\n  const time = new Date(datetime);\n  return __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Moment, {\n    add: {\n      hours: `${idx}`\n    },\n    format: \"H:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, roundToHour(time))), __jsx(\"img\", {\n    src: getIcon(icon),\n    alt: desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  })), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: hourStyles.left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, capitalize(desc))), __jsx(\"div\", {\n    className: hourStyles.right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, temp, \" \\xB0\", isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, feelsLike, \" \\xB0\", isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, windSpd, \" \", windDeg, \" \", isFahrenheit ? 'miles/hr' : 'meter/sec')));\n};\n\nexport default Hour;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/hourly/hour.js"],"names":["Moment","getIcon","capitalize","roundToHour","hourStyles","Hour","idx","datetime","icon","desc","temp","isFahrenheit","isCelsius","feelsLike","windSpd","windDeg","time","Date","hours","left","right"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,wBAA5B;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,GADY;AAEZC,EAAAA,QAFY;AAGZC,EAAAA,IAHY;AAIZC,EAAAA,IAJY;AAKZC,EAAAA,IALY;AAMZC,EAAAA,YANY;AAOZC,EAAAA,SAPY;AAQZC,EAAAA,SARY;AASZC,EAAAA,OATY;AAUZC,EAAAA;AAVY,CAAD,KAWP;AACJ,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASV,QAAT,CAAb;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAE;AAAEW,MAAAA,KAAK,EAAG,GAAEZ,GAAI;AAAhB,KAAb;AAAkC,IAAA,MAAM,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDH,WAAW,CAACa,IAAD,CAA5D,CAAJ,CADF,EAEE;AAAK,IAAA,GAAG,EAAEf,OAAO,CAACO,IAAD,CAAjB;AAAyB,IAAA,GAAG,EAAEC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAWE;AAAK,IAAA,SAAS,EAAEL,UAAU,CAACe,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQjB,UAAU,CAACO,IAAD,CAAlB,CAFF,CAXF,EAeE;AAAK,IAAA,SAAS,EAAEL,UAAU,CAACgB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIV,IAAJ,WAAgBC,YAAY,GAAG,GAAH,GAASC,SAAS,GAAG,GAAH,GAAS,GAAvD,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,SAAJ,WAAqBF,YAAY,GAAG,GAAH,GAASC,SAAS,GAAG,GAAH,GAAS,GAA5D,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,OAAJ,OAAcC,OAAd,OAAwBJ,YAAY,GAAG,UAAH,GAAgB,WAApD,CAHF,CAfF,CADF;AAuBD,CApCD;;AAsCA,eAAeN,IAAf","sourcesContent":["import Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport { roundToHour } from '../../utils/dateHelper';\n\nimport hourStyles from './hour.module.scss';\n\nconst Hour = ({\n  idx,\n  datetime,\n  icon,\n  desc,\n  temp,\n  isFahrenheit,\n  isCelsius,\n  feelsLike,\n  windSpd,\n  windDeg\n}) => {\n  const time = new Date(datetime);\n  return (\n    <tr>\n      <td>\n        <h2><Moment add={{ hours: `${idx}` }} format=\"H:mm\">{roundToHour(time)}</Moment></h2>\n        <img src={getIcon(icon)} alt={desc} />\n      </td>\n      <td></td>\n      <td></td>\n      <td></td>\n      <td></td>\n\n\n      <div className={hourStyles.left}>\n        \n        <small>{capitalize(desc)}</small>\n      </div>\n      <div className={hourStyles.right}>\n        <p>{temp} &deg;{isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'}</p>\n        <p>{feelsLike} &deg;{isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'}</p>\n        <p>{windSpd} {windDeg} {isFahrenheit ? 'miles/hr' : 'meter/sec'}</p>\n      </div>\n    </tr>\n  )\n}\n\nexport default Hour;"]},"metadata":{},"sourceType":"module"}