{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Moment from 'react-moment';\nimport hourlyStyles from './hourly.module.scss';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\n\nconst Hourly = ({\n  hourly\n}) => {\n  console.log(hourly);\n  return __jsx(\"div\", {\n    className: hourlyStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, \"Twelve hour forecast\"), __jsx(\"div\", {\n    className: hourlyStyles.forecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, hourly.map((hour, idx) => {\n    const datetime = new Date(hour.dt);\n    return __jsx(\"div\", {\n      key: idx,\n      className: hourlyStyles.hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      src: getIcon(hour.weather[0].icon),\n      alt: hour.weather[0].description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }\n    }, \"Temp: \", Math.floor(hour.temp), \"\\xB0\"), __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 19\n      }\n    }, \"Feels like: \", Math.floor(hour.feels_like), \"\\xB0\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }\n    }, `${capitalize(hour.weather[0].description)}`)), __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, hour.dt));\n  })));\n};\n\nexport default Hourly;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js"],"names":["Moment","hourlyStyles","getIcon","capitalize","Hourly","hourly","console","log","container","forecast","map","hour","idx","datetime","Date","dt","weather","icon","description","Math","floor","temp","feels_like"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAEJ,YAAY,CAACO,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAK,IAAA,SAAS,EAAEP,YAAY,CAACQ,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIJ,MAAM,CAACK,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AACxB,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,CAASH,IAAI,CAACI,EAAd,CAAjB;AACA,WACE;AAAK,MAAA,GAAG,EAAEH,GAAV;AAAe,MAAA,SAAS,EAAEX,YAAY,CAACU,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAET,OAAO,CAACS,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBC,IAAjB,CAAjB;AAAyC,MAAA,GAAG,EAAEN,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBE,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUC,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACU,IAAhB,CAAV,SADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAoBF,IAAI,CAACC,KAAL,CAAWT,IAAI,CAACW,UAAhB,CAApB,SAFF,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,GAAEnB,UAAU,CAACQ,IAAI,CAACK,OAAL,CAAa,CAAb,EAAgBE,WAAjB,CAA8B,EAA/C,CADF,CANF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQP,IAAI,CAACI,EAAb,CATF,CADF;AAaD,GAfD,CAFJ,CAFF,CADF;AAyBD,CA3BD;;AA6BA,eAAeX,MAAf","sourcesContent":["import Moment from 'react-moment';\nimport hourlyStyles from './hourly.module.scss';\n\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\n\nconst Hourly = ({ hourly }) => {\n  console.log(hourly)\n  return (\n    <div className={hourlyStyles.container}>\n      <h1>Twelve hour forecast</h1>\n      <div className={hourlyStyles.forecast}>\n        {\n          hourly.map((hour, idx) => {\n            const datetime = new Date(hour.dt);\n            return (\n              <div key={idx} className={hourlyStyles.hour}>\n                <img src={getIcon(hour.weather[0].icon)} alt={hour.weather[0].description} />\n                <div>\n                  <p>Temp: {Math.floor(hour.temp)}&deg;</p>\n                  <small>Feels like: {Math.floor(hour.feels_like)}&deg;</small>\n                </div>\n                <div>\n                  <p>{`${capitalize(hour.weather[0].description)}`}</p>\n                </div>\n                <small>{hour.dt}</small>\n              </div>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Hourly;"]},"metadata":{},"sourceType":"module"}