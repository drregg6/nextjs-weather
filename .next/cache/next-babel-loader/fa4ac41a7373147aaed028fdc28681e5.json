{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Moment from 'react-moment';\nimport Layout from '../../components/layout/layout';\n\nconst Daily = ({\n  location,\n  daily\n}) => {\n  const datetime = Date.now();\n  const {\n    city,\n    state\n  } = location.components;\n  let link;\n\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: `/city/weather?city=${city}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 49\n    }\n  }, \"Go back\")), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, link.toUpperCase()), daily.map((day, idx) => {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, __jsx(Moment, {\n      add: {\n        days: `${idx + 1}`\n      },\n      format: \"dddd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 22\n      }\n    }, datetime)), __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }, __jsx(Moment, {\n      add: {\n        days: `${idx + 1}`\n      },\n      format: \"DD MMM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }\n    }, datetime)));\n  }));\n};\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json(); // access lat and long from data\n\n  const {\n    lat,\n    lng\n  } = loc_data.results[0].geometry; // search for weather data with lat and long data\n\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json();\n  console.log(weather_data); // return to props\n\n  return {\n    props: {\n      location: loc_data.results[0],\n      daily: weather_data.daily\n    }\n  };\n}\nexport default Daily;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js"],"names":["Link","Moment","Layout","Daily","location","daily","datetime","Date","now","city","state","components","link","undefined","toLowerCase","toUpperCase","map","day","idx","days","getServerSideProps","ctx","loc_res","fetch","query","loc_data","json","lat","lng","results","geometry","weather_res","process","env","WEATHER_API","weather_data","console","log","props"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACrC,QAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAL,EAAjB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBN,QAAQ,CAACO,UAAjC;AACA,MAAIC,IAAJ;;AACA,MAAIH,IAAI,KAAKI,SAAb,EAAwB;AACtBD,IAAAA,IAAI,GAAGH,IAAI,CAACK,WAAL,EAAP;AACD,GAFD,MAEO;AACLF,IAAAA,IAAI,GAAGF,KAAK,CAACI,WAAN,EAAP;AACD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,sBAAqBL,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMG,IAAI,CAACG,WAAL,EAAN,CAFF,EAIIV,KAAK,CAACW,GAAN,CAAU,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE;AAAEC,QAAAA,IAAI,EAAG,GAAED,GAAG,GAAC,CAAE;AAAjB,OAAb;AAAmC,MAAA,MAAM,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkDZ,QAAlD,CAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE;AAAEa,QAAAA,IAAI,EAAG,GAAED,GAAG,GAAC,CAAE;AAAjB,OAAb;AAAmC,MAAA,MAAM,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDZ,QAApD,CAAJ,CAFF,CADF;AAMD,GAPD,CAJJ,CADF;AAgBD,CAzBD;;AA2BA,OAAO,eAAec,kBAAf,CAAkCC,GAAlC,EAAuC;AAC5C,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,uFAAsFF,GAAG,CAACG,KAAJ,CAAUf,IAAK,EAAvG,CAA3B;AACA,QAAMgB,QAAQ,GAAG,MAAMH,OAAO,CAACI,IAAR,EAAvB,CAF4C,CAG5C;;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeH,QAAQ,CAACI,OAAT,CAAiB,CAAjB,EAAoBC,QAAzC,CAJ4C,CAK5C;;AACA,QAAMC,WAAW,GAAG,MAAMR,KAAK,CAAE,uDAAsDI,GAAI,QAAOC,GAAI,UAASI,OAAO,CAACC,GAAR,CAAYC,WAAY,iBAAxG,CAA/B;AACA,QAAMC,YAAY,GAAG,MAAMJ,WAAW,CAACL,IAAZ,EAA3B;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EAT4C,CAU5C;;AACA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLlC,MAAAA,QAAQ,EAAEqB,QAAQ,CAACI,OAAT,CAAiB,CAAjB,CADL;AAELxB,MAAAA,KAAK,EAAE8B,YAAY,CAAC9B;AAFf;AADF,GAAP;AAMD;AAED,eAAeF,KAAf","sourcesContent":["import Link from 'next/link';\nimport Moment from 'react-moment';\n\nimport Layout from '../../components/layout/layout';\n\nconst Daily = ({ location, daily }) => {\n  const datetime = Date.now();\n  const { city, state } = location.components;\n  let link;\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n  return (\n    <Layout>\n      <Link href={`/city/weather?city=${city}`}><a>Go back</a></Link>\n      <h1>{ link.toUpperCase() }</h1>\n      {\n        daily.map((day, idx) => {\n          return (\n            <div>\n              <small><Moment add={{ days: `${idx+1}` }} format=\"dddd\">{datetime}</Moment></small>\n              <h2><Moment add={{ days: `${idx+1}` }} format=\"DD MMM\">{datetime}</Moment></h2>\n            </div>\n          )\n        })\n      }\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0],\n      daily: weather_data.daily\n    }\n  }\n}\n\nexport default Daily;"]},"metadata":{},"sourceType":"module"}