{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n\nUse a grid instead of flexbox\nIn order to generate hourly into two rows\n\n*/\nimport Moment from 'react-moment';\nimport hourlyStyles from './hourly.module.scss';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\n\nconst Hourly = ({\n  hourly,\n  datetime\n}) => {\n  console.log(hourly);\n  const firstSix = hourly.slice(0, 6);\n  const lastSix = hourly.slice(6);\n  return __jsx(\"div\", {\n    className: hourlyStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, \"Twelve hour forecast\"), __jsx(\"div\", {\n    className: hourlyStyles.forecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: hourlyStyles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, hourly.map((hour, idx) => {\n    return __jsx(\"div\", {\n      key: idx,\n      className: hourlyStyles.hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, __jsx(Moment, {\n      add: {\n        hours: `${idx}`\n      },\n      format: \"H:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }\n    }, datetime)), __jsx(\"img\", {\n      src: getIcon(hour.weather[0].icon),\n      alt: hour.weather[0].description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }, \"Temp: \", Math.floor(hour.temp), \"\\xB0\"), __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }\n    }, \"Feels like: \", Math.floor(hour.feels_like), \"\\xB0\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, `${capitalize(hour.weather[0].description)}`)));\n  })), __jsx(\"div\", {\n    className: hourlyStyles.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, lastSix.map((hour, idx) => {\n    return __jsx(\"div\", {\n      key: idx,\n      className: hourlyStyles.hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, __jsx(Moment, {\n      add: {\n        hours: `${idx}`\n      },\n      format: \"H:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 24\n      }\n    }, datetime)), __jsx(\"img\", {\n      src: getIcon(hour.weather[0].icon),\n      alt: hour.weather[0].description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    }, \"Temp: \", Math.floor(hour.temp), \"\\xB0\"), __jsx(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, \"Feels like: \", Math.floor(hour.feels_like), \"\\xB0\")), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, `${capitalize(hour.weather[0].description)}`)));\n  }))));\n};\n\nexport default Hourly;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js"],"names":["Moment","hourlyStyles","getIcon","capitalize","Hourly","hourly","datetime","console","log","firstSix","slice","lastSix","container","forecast","row","map","hour","idx","hours","weather","icon","description","Math","floor","temp","feels_like"],"mappings":"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","sourcesContent":["/*\n\nUse a grid instead of flexbox\nIn order to generate hourly into two rows\n\n*/\n\nimport Moment from 'react-moment';\nimport hourlyStyles from './hourly.module.scss';\n\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\n\nconst Hourly = ({ hourly, datetime }) => {\n  console.log(hourly)\n  const firstSix = hourly.slice(0,6);\n  const lastSix = hourly.slice(6);\n  return (\n    <div className={hourlyStyles.container}>\n      <h1>Twelve hour forecast</h1>\n      <div className={hourlyStyles.forecast}>\n        <div className={hourlyStyles.row}>\n        {\n          hourly.map((hour, idx) => {\n            return (\n              <div key={idx} className={hourlyStyles.hour}>\n                <small><Moment add={{ hours: `${idx}` }} format=\"H:mm\">{datetime}</Moment></small>\n                <img src={getIcon(hour.weather[0].icon)} alt={hour.weather[0].description} />\n                <div>\n                  <p>Temp: {Math.floor(hour.temp)}&deg;</p>\n                  <small>Feels like: {Math.floor(hour.feels_like)}&deg;</small>\n                </div>\n                <div>\n                  <p>{`${capitalize(hour.weather[0].description)}`}</p>\n                </div>\n              </div>\n            )\n          })\n        }\n        </div>\n        <div className={hourlyStyles.row}>\n        {\n          lastSix.map((hour, idx) => {\n            return (\n              <div key={idx} className={hourlyStyles.hour}>\n                <small><Moment add={{ hours: `${idx}` }} format=\"H:mm\">{datetime}</Moment></small>\n                <img src={getIcon(hour.weather[0].icon)} alt={hour.weather[0].description} />\n                <div>\n                  <p>Temp: {Math.floor(hour.temp)}&deg;</p>\n                  <small>Feels like: {Math.floor(hour.feels_like)}&deg;</small>\n                </div>\n                <div>\n                  <p>{`${capitalize(hour.weather[0].description)}`}</p>\n                </div>\n              </div>\n            )\n          })\n        }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Hourly;"]},"metadata":{},"sourceType":"module"}