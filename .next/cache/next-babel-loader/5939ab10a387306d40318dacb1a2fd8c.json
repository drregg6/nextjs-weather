{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Moment from 'react-moment';\nimport { roundToHour } from '../../utils/dateHelper';\nimport Router from 'next/router';\nimport { getIcon, changeUnit } from '../../utils/weatherHelper';\nimport hourlyStyles from './hourly.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\n\nvar Hourly = function Hourly(_ref) {\n  var link = _ref.link,\n      hourly = _ref.hourly,\n      datetime = _ref.datetime,\n      isFahrenheit = _ref.isFahrenheit,\n      isCelsius = _ref.isCelsius;\n\n  // Router\n  var handleClick = function handleClick() {\n    Router.push({\n      pathname: \"/city/hourly\",\n      query: {\n        city: \"\".concat(link)\n      }\n    });\n  };\n\n  var time = new Date(datetime);\n  console.log(hourly);\n  return __jsx(\"div\", {\n    className: hourlyStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"\".concat(utilStyles.subtitle, \" \").concat(utilStyles.mb1),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Six hour forecast\"), __jsx(\"div\", {\n    className: hourlyStyles.forecast,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, hourly.slice(0, 5).map(function (hour, idx) {\n    var icon = hour.weather[0].icon;\n    var desc = hour.weather[0].description;\n    var temp = Math.floor(hour.temp);\n\n    if (isFahrenheit) {\n      temp = changeUnit(temp, 'f');\n    } else if (isCelsius) {\n      temp = changeUnit(temp, 'c');\n    } else {\n      temp = changeUnit(temp, 'k');\n    }\n\n    return __jsx(\"div\", {\n      key: idx,\n      className: \"\".concat(hourlyStyles.hour, \" \").concat(utilStyles.ptb1),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      className: hourlyStyles.time,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, __jsx(Moment, {\n      add: {\n        hours: \"\".concat(idx)\n      },\n      format: \"H:mm\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 51\n      }\n    }, roundToHour(time))), __jsx(\"img\", {\n      src: getIcon(icon),\n      alt: desc,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, temp, \" \\xB0\", isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'));\n  }), __jsx(\"div\", {\n    className: hourlyStyles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: hourlyStyles.linktext,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"See further into the day...\"))));\n};\n\n_c = Hourly;\nexport default Hourly;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hourly\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js"],"names":["Moment","roundToHour","Router","getIcon","changeUnit","hourlyStyles","utilStyles","Hourly","link","hourly","datetime","isFahrenheit","isCelsius","handleClick","push","pathname","query","city","time","Date","console","log","container","subtitle","mb1","forecast","slice","map","hour","idx","icon","weather","desc","description","temp","Math","floor","ptb1","hours","linktext"],"mappings":"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","sourcesContent":["import Moment from 'react-moment';\nimport { roundToHour } from '../../utils/dateHelper';\nimport Router from 'next/router';\nimport { getIcon, changeUnit } from '../../utils/weatherHelper';\n\nimport hourlyStyles from './hourly.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\n\nconst Hourly = ({\n  link,\n  hourly,\n  datetime,\n  isFahrenheit,\n  isCelsius\n}) => {\n  // Router\n  const handleClick = () => {\n    Router.push({\n      pathname: `/city/hourly`,\n      query: {\n        city: `${link}`\n      }\n    })\n  }\n  const time = new Date(datetime);\n\n  console.log(hourly);\n  return (\n    <div className={hourlyStyles.container}>\n      <h1 className={`${utilStyles.subtitle} ${utilStyles.mb1}`}>Six hour forecast</h1>\n      <div className={hourlyStyles.forecast}>\n        {\n          hourly.slice(0,5).map((hour, idx) => {\n            const icon = hour.weather[0].icon;\n            const desc = hour.weather[0].description;\n            let temp = Math.floor(hour.temp);\n            if (isFahrenheit) {\n              temp = changeUnit(temp, 'f');\n            } else if (isCelsius) {\n              temp = changeUnit(temp, 'c');\n            } else {\n              temp = changeUnit(temp, 'k');\n            }\n            return (\n              <div key={idx} className={`${hourlyStyles.hour} ${utilStyles.ptb1}`}>\n                <h2 className={hourlyStyles.time}><Moment add={{ hours: `${idx}` }} format=\"H:mm\">{roundToHour(time)}</Moment></h2>\n                <img src={getIcon(icon)} alt={desc} />\n                <p>{temp} &deg;{isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'}</p>\n              </div>\n            )\n          })\n        }\n        <div className={hourlyStyles.link}>\n          <span className={hourlyStyles.linktext} onClick={handleClick}>See further into the day...</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Hourly;"]},"metadata":{},"sourceType":"module"}