{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/weatherLink.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\n\nvar WeatherLink = function WeatherLink(_ref) {\n  _s();\n\n  var href = _ref.href,\n      as = _ref.as,\n      children = _ref.children,\n      city = _ref.city;\n  var router = useRouter();\n\n  var handler = function handler(ev) {\n    ev.preventDefault();\n    router.push(href, as, {\n      query: {\n        city: city\n      }\n    });\n  };\n\n  return __jsx(\"a\", {\n    href: href,\n    as: as,\n    onClick: handler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, children);\n};\n\n_s(WeatherLink, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = WeatherLink;\nexport default WeatherLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherLink\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/weatherLink.js"],"names":["useRouter","WeatherLink","href","as","children","city","router","handler","ev","preventDefault","push","query"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAkC;AAAA;;AAAA,MAA/BC,IAA+B,QAA/BA,IAA+B;AAAA,MAAzBC,EAAyB,QAAzBA,EAAyB;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACpD,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AACA,MAAMO,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD,EAAQ;AACtBA,IAAAA,EAAE,CAACC,cAAH;AACAH,IAAAA,MAAM,CAACI,IAAP,CAAYR,IAAZ,EAAkBC,EAAlB,EAAsB;AAAEQ,MAAAA,KAAK,EAAE;AAACN,QAAAA,IAAI,EAAJA;AAAD;AAAT,KAAtB;AACD,GAHD;;AAIA,SACE;AAAG,IAAA,IAAI,EAAEH,IAAT;AAAe,IAAA,EAAE,EAAEC,EAAnB;AAAuB,IAAA,OAAO,EAAEI,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CH,QAA1C,CADF;AAGD,CATD;;GAAMH,W;UACWD,S;;;KADXC,W;AAWN,eAAeA,WAAf","sourcesContent":["import { useRouter } from 'next/router';\n\nconst WeatherLink = ({ href, as, children, city }) => {\n  const router = useRouter();\n  const handler = (ev) => {\n    ev.preventDefault();\n    router.push(href, as, { query: {city} })\n  }\n  return (\n    <a href={href} as={as} onClick={handler}>{children}</a>\n  )\n}\n\nexport default WeatherLink;"]},"metadata":{},"sourceType":"module"}