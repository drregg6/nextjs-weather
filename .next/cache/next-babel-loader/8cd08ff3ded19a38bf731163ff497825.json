{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/current.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Moment from 'react-moment';\nimport { getIcon, changeUnit } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport currentStyles from './current.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\n\nconst Current = ({\n  current,\n  datetime,\n  isFahrenheit,\n  isCelsius\n}) => {\n  const icon = current.weather[0].icon;\n  const desc = current.weather[0].description;\n  let temp = Math.floor(current.temp);\n  let feelsLike = Math.floor(current.feels_like);\n\n  if (isFahrenheit) {\n    temp = changeUnit(temp, 'f');\n    feelsLike = changeUnit(feelsLike, 'f');\n  } else if (isCelsius) {\n    temp = changeUnit(temp, 'c');\n    feelsLike = changeUnit(feelsLike, 'c');\n  } else {\n    temp = changeUnit(temp, 'k');\n    feelsLike = changeUnit(feelsLike, 'k');\n  }\n\n  console.log(current);\n  return __jsx(\"div\", {\n    className: currentStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: `${utilStyles.subtitle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(Moment, {\n    format: \"DD MMMM YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, datetime)), __jsx(\"img\", {\n    src: getIcon(icon),\n    alt: desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    className: `${utilStyles.italic} ${utilStyles.doubleSize}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, `${capitalize(desc)}`), __jsx(\"div\", {\n    className: `${utilStyles.mtb2}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    className: `${utilStyles.doubleSize}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, temp, \" \\xB0\", isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'), __jsx(\"p\", {\n    className: `${utilStyles.aLittleLarger}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: `${utilStyles.strong}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 54\n    }\n  }, \"Feels like:\"), \" \", __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 114\n    }\n  }, feelsLike, \" \\xB0\", isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'))), __jsx(\"div\", {\n    className: `${utilStyles.aLittleLarger}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: `${utilStyles.strong}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Humidity: \")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: `${utilStyles.strong}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Wind: \"))));\n};\n\nexport default Current;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/current.js"],"names":["Moment","getIcon","changeUnit","capitalize","currentStyles","utilStyles","Current","current","datetime","isFahrenheit","isCelsius","icon","weather","desc","description","temp","Math","floor","feelsLike","feels_like","console","log","container","subtitle","italic","doubleSize","mtb2","aLittleLarger","strong"],"mappings":"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","sourcesContent":["import Moment from 'react-moment';\nimport { getIcon, changeUnit } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\n\nimport currentStyles from './current.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\n\nconst Current = ({\n  current,\n  datetime,\n  isFahrenheit,\n  isCelsius\n}) => {\n  const icon = current.weather[0].icon;\n  const desc = current.weather[0].description;\n\n  let temp = Math.floor(current.temp);\n  let feelsLike = Math.floor(current.feels_like);\n  if (isFahrenheit) {\n    temp = changeUnit(temp, 'f');\n    feelsLike = changeUnit(feelsLike, 'f');\n  } else if (isCelsius) {\n    temp = changeUnit(temp, 'c');\n    feelsLike = changeUnit(feelsLike, 'c');\n  } else {\n    temp = changeUnit(temp, 'k');\n    feelsLike = changeUnit(feelsLike, 'k');\n  }\n  console.log(current);\n  return (\n    <div className={currentStyles.container}>\n      <h1 className={`${utilStyles.subtitle}`}>\n        <Moment format=\"DD MMMM YYYY\">{datetime}</Moment>\n      </h1>\n      <img src={getIcon(icon)} alt={desc} />\n      <p className={`${utilStyles.italic} ${utilStyles.doubleSize}`}>{`${capitalize(desc)}`}</p>\n      <div className={`${utilStyles.mtb2}`}>\n        <p className={`${utilStyles.doubleSize}`}>{temp} &deg;{isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'}</p>\n        <p className={`${utilStyles.aLittleLarger}`}><span className={`${utilStyles.strong}`}>Feels like:</span> <span>{feelsLike} &deg;{isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'}</span></p>\n      </div>\n      <div className={`${utilStyles.aLittleLarger}`}>\n        <p>\n          <span className={`${utilStyles.strong}`}>Humidity: </span>\n        </p>\n        <p>\n          <span className={`${utilStyles.strong}`}>Wind: </span>\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default Current;"]},"metadata":{},"sourceType":"module"}