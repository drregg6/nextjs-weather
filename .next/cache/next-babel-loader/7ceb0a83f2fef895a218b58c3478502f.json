{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/hourly.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport hourlyStyles from './hourly.module.scss';\nimport Layout from '../../components/layout/layout';\nimport Hour from '../../components/hourly/hour';\n\nvar Hourly = function Hourly(_ref) {\n  var location = _ref.location,\n      hourly = _ref.hourly;\n  console.log(hourly);\n  var datetime = Date.now();\n  var _location$components = location.components,\n      city = _location$components.city,\n      state = _location$components.state;\n  var link;\n\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: hourlyStyles.top,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/city/weather?city=\".concat(link),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: hourlyStyles.back,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 51\n    }\n  }, \"\\u2190 Go back\")), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, \"\\xB0C\"), \" | \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 34\n    }\n  }, \"\\xB0F\"), \" | \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 56\n    }\n  }, \"\\xB0K\"))), __jsx(\"h1\", {\n    className: hourlyStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, link.toUpperCase()), __jsx(\"div\", {\n    className: hourlyStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, hourly.slice(0, 12).map(function (hour, idx) {\n    var icon = hour.weather[0].icon;\n    var desc = hour.weather[0].description;\n    var temp = Math.floor(hour.temp);\n    return __jsx(Hour, {\n      key: idx,\n      icon: icon,\n      temp: temp,\n      idx: idx,\n      desc: desc,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\n_c = Hourly;\nexport var __N_SSP = true;\nexport default Hourly;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hourly\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/hourly.js"],"names":["Link","Moment","getIcon","hourlyStyles","Layout","Hour","Hourly","location","hourly","console","log","datetime","Date","now","components","city","state","link","undefined","toLowerCase","top","back","title","toUpperCase","container","slice","map","hour","idx","icon","weather","desc","description","temp","Math","floor"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,IAAP,MAAiB,8BAAjB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAA0B;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,MAAMG,QAAQ,GAAGC,IAAI,CAACC,GAAL,EAAjB;AAFuC,6BAGfN,QAAQ,CAACO,UAHM;AAAA,MAG/BC,IAH+B,wBAG/BA,IAH+B;AAAA,MAGzBC,KAHyB,wBAGzBA,KAHyB;AAIvC,MAAIC,IAAJ;;AACA,MAAIF,IAAI,KAAKG,SAAb,EAAwB;AACtBD,IAAAA,IAAI,GAAGF,IAAI,CAACI,WAAL,EAAP;AACD,GAFD,MAEO;AACLF,IAAAA,IAAI,GAAGD,KAAK,CAACG,WAAN,EAAP;AACD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEhB,YAAY,CAACiB,GAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,+BAAwBH,IAAxB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0C;AAAG,IAAA,SAAS,EAAEd,YAAY,CAACkB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1C,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAH,SAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAzB,SAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA/C,CAFF,CADF,EAKE;AAAI,IAAA,SAAS,EAAElB,YAAY,CAACmB,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCL,IAAI,CAACM,WAAL,EAArC,CALF,EAME;AAAK,IAAA,SAAS,EAAEpB,YAAY,CAACqB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIhB,MAAM,CAACiB,KAAP,CAAa,CAAb,EAAe,EAAf,EAAmBC,GAAnB,CAAuB,UAACC,IAAD,EAAOC,GAAP,EAAe;AACpC,QAAMC,IAAI,GAAGF,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBD,IAA7B;AACA,QAAME,IAAI,GAAGJ,IAAI,CAACG,OAAL,CAAa,CAAb,EAAgBE,WAA7B;AAEA,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACM,IAAhB,CAAX;AACA,WACE,MAAC,IAAD;AACE,MAAA,GAAG,EAAEL,GADP;AAEE,MAAA,IAAI,EAAEC,IAFR;AAGE,MAAA,IAAI,EAAEI,IAHR;AAIE,MAAA,GAAG,EAAEL,GAJP;AAKE,MAAA,IAAI,EAAEG,IALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AASD,GAdD,CAFJ,CANF,CADF;AA4BD,CAtCD;;KAAMzB,M;;AA2DN,eAAeA,MAAf","sourcesContent":["import Link from 'next/link';\nimport Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport hourlyStyles from './hourly.module.scss';\n\nimport Layout from '../../components/layout/layout';\nimport Hour from '../../components/hourly/hour';\n\nconst Hourly = ({ location, hourly }) => {\n  console.log(hourly)\n  const datetime = Date.now();\n  const { city, state } = location.components;\n  let link;\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n  return (\n    <Layout>\n      <div className={hourlyStyles.top}>\n        <Link href={`/city/weather?city=${link}`}><a className={hourlyStyles.back}>&#8592; Go back</a></Link>\n        <p><span>&deg;C</span> | <span>&deg;F</span> | <span>&deg;K</span></p>\n      </div>\n      <h1 className={hourlyStyles.title}>{ link.toUpperCase() }</h1>\n      <div className={hourlyStyles.container}>\n        {\n          hourly.slice(0,12).map((hour, idx) => {\n            const icon = hour.weather[0].icon;\n            const desc = hour.weather[0].description;\n\n            let temp = Math.floor(hour.temp);\n            return (\n              <Hour\n                key={idx}\n                icon={icon}\n                temp={temp}\n                idx={idx}\n                desc={desc}\n              />\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0],\n      hourly: weather_data.hourly\n    }\n  }\n}\n\nexport default Hourly;"]},"metadata":{},"sourceType":"module"}