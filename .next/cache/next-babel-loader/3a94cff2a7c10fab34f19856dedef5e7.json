{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Moment from 'react-moment';\nimport { roundToHour } from '../../utils/dateHelper';\nimport hourlyStyles from './hourly.module.scss';\nimport Router from 'next/router';\nimport { getIcon, changeUnit } from '../../utils/weatherHelper';\n\nconst Hourly = ({\n  link,\n  hourly,\n  datetime,\n  isFahrenheit,\n  isCelsius\n}) => {\n  // Router\n  const handleClick = () => {\n    Router.push({\n      pathname: `/city/hourly`,\n      query: {\n        city: `${link}`\n      }\n    });\n  };\n\n  const time = new Date(datetime);\n  console.log(hourly);\n  return __jsx(\"div\", {\n    className: hourlyStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: hourlyStyles.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Six hour forecast\"), __jsx(\"div\", {\n    className: hourlyStyles.forecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, hourly.slice(0, 6).map((hour, idx) => {\n    const icon = hour.weather[0].icon;\n    const desc = hour.weather[0].description;\n    let temp = Math.floor(hour.temp);\n\n    if (isFahrenheit) {\n      temp = changeUnit(temp, 'f');\n    } else if (isCelsius) {\n      temp = changeUnit(temp, 'c');\n    } else {\n      temp = changeUnit(temp, 'k');\n    }\n\n    return __jsx(\"div\", {\n      key: idx,\n      className: hourlyStyles.hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, __jsx(\"h2\", {\n      className: hourlyStyles.time,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, __jsx(Moment, {\n      add: {\n        hours: `${idx}`\n      },\n      format: \"H:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 51\n      }\n    }, roundToHour(time))), __jsx(\"div\", {\n      className: hourlyStyles.details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, __jsx(\"img\", {\n      src: getIcon(hour.weather[0].icon),\n      alt: hour.weather[0].description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }, \"Temp: \", Math.floor(hour.temp), \" \\xB0\", isFahrenheit ? 'F' : isCelsius ? 'C' : 'K')));\n  }), __jsx(\"div\", {\n    className: hourlyStyles.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: hourlyStyles.linktext,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"See further into the day...\"))));\n};\n\nexport default Hourly;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js"],"names":["Moment","roundToHour","hourlyStyles","Router","getIcon","changeUnit","Hourly","link","hourly","datetime","isFahrenheit","isCelsius","handleClick","push","pathname","query","city","time","Date","console","log","container","subtitle","forecast","slice","map","hour","idx","icon","weather","desc","description","temp","Math","floor","hours","details","linktext"],"mappings":"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","sourcesContent":["import Moment from 'react-moment';\nimport { roundToHour } from '../../utils/dateHelper';\nimport hourlyStyles from './hourly.module.scss';\nimport Router from 'next/router';\n\nimport { getIcon, changeUnit } from '../../utils/weatherHelper';\n\nconst Hourly = ({\n  link,\n  hourly,\n  datetime,\n  isFahrenheit,\n  isCelsius\n}) => {\n  // Router\n  const handleClick = () => {\n    Router.push({\n      pathname: `/city/hourly`,\n      query: {\n        city: `${link}`\n      }\n    })\n  }\n  const time = new Date(datetime);\n\n  console.log(hourly);\n  return (\n    <div className={hourlyStyles.container}>\n      <h1 className={hourlyStyles.subtitle}>Six hour forecast</h1>\n      <div className={hourlyStyles.forecast}>\n        {\n          hourly.slice(0,6).map((hour, idx) => {\n            const icon = hour.weather[0].icon;\n            const desc = hour.weather[0].description;\n            let temp = Math.floor(hour.temp);\n            if (isFahrenheit) {\n              temp = changeUnit(temp, 'f');\n            } else if (isCelsius) {\n              temp = changeUnit(temp, 'c');\n            } else {\n              temp = changeUnit(temp, 'k');\n            }\n            return (\n              <div key={idx} className={hourlyStyles.hour}>\n                <h2 className={hourlyStyles.time}><Moment add={{ hours: `${idx}` }} format=\"H:mm\">{roundToHour(time)}</Moment></h2>\n                <div className={hourlyStyles.details}>\n                  <img src={getIcon(hour.weather[0].icon)} alt={hour.weather[0].description} />\n                  <p>Temp: {Math.floor(hour.temp)} &deg;{isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'}</p>\n                </div>\n              </div>\n            )\n          })\n        }\n        <div className={hourlyStyles.link}>\n          <span className={hourlyStyles.linktext} onClick={handleClick}>See further into the day...</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Hourly;"]},"metadata":{},"sourceType":"module"}