{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n\nPrec %\nWind Dir / Speed\nHumidity %\n\n*/\nimport Link from 'next/link';\nimport Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport dailyStyles from './daily.module.scss';\nimport Layout from '../../components/layout/layout';\n\nvar Daily = function Daily(_ref) {\n  var location = _ref.location,\n      daily = _ref.daily;\n  console.log(daily);\n  var datetime = Date.now();\n  var _location$components = location.components,\n      city = _location$components.city,\n      state = _location$components.state;\n  var link;\n\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/city/weather?city=\".concat(city),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: dailyStyles.back,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 49\n    }\n  }, \"\\u2190 Go back\")), __jsx(\"h1\", {\n    className: dailyStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, link.toUpperCase()), __jsx(\"div\", {\n    className: dailyStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, daily.slice(0, 5).map(function (day, idx) {\n    var humidity = day.humidity;\n    var highTemp = Math.floor(day.temp.max);\n    var lowTemp = Math.floor(day.temp.min);\n    var feelsLike = Math.floor(day.feels_like.day);\n    return __jsx(\"div\", {\n      key: idx,\n      className: dailyStyles.day,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: dailyStyles.dayTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, __jsx(Moment, {\n      add: {\n        days: \"\".concat(idx)\n      },\n      format: \"dddd\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 26\n      }\n    }, datetime)), __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, __jsx(Moment, {\n      add: {\n        days: \"\".concat(idx + 1)\n      },\n      format: \"DD MMM\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 23\n      }\n    }, datetime))), __jsx(\"img\", {\n      src: getIcon(day.weather[0].icon),\n      alt: day.weather[0].description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }), __jsx(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, capitalize(day.weather[0].description)), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, highTemp, \"\\xB0F / \", lowTemp, \"\\xB0F\"), __jsx(\"small\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, feelsLike, \"\\xB0F\"));\n  })));\n};\n\n_c = Daily;\nexport var __N_SSP = true;\nexport default Daily;\n\nvar _c;\n\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js"],"names":["Link","Moment","getIcon","capitalize","dailyStyles","Layout","Daily","location","daily","console","log","datetime","Date","now","components","city","state","link","undefined","toLowerCase","back","title","toUpperCase","container","slice","map","day","idx","humidity","highTemp","Math","floor","temp","max","lowTemp","min","feelsLike","feels_like","dayTitle","days","weather","icon","description"],"mappings":";;;;;;AAAA;;;;;;;AAQA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAyB;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACrCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAMG,QAAQ,GAAGC,IAAI,CAACC,GAAL,EAAjB;AAFqC,6BAGbN,QAAQ,CAACO,UAHI;AAAA,MAG7BC,IAH6B,wBAG7BA,IAH6B;AAAA,MAGvBC,KAHuB,wBAGvBA,KAHuB;AAIrC,MAAIC,IAAJ;;AACA,MAAIF,IAAI,KAAKG,SAAb,EAAwB;AACtBD,IAAAA,IAAI,GAAGF,IAAI,CAACI,WAAL,EAAP;AACD,GAFD,MAEO;AACLF,IAAAA,IAAI,GAAGD,KAAK,CAACG,WAAN,EAAP;AACD;;AACD,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,+BAAwBJ,IAAxB,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0C;AAAG,IAAA,SAAS,EAAEX,WAAW,CAACgB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1C,CADF,EAEE;AAAI,IAAA,SAAS,EAAEhB,WAAW,CAACiB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCJ,IAAI,CAACK,WAAL,EAApC,CAFF,EAGE;AAAK,IAAA,SAAS,EAAElB,WAAW,CAACmB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIf,KAAK,CAACgB,KAAN,CAAY,CAAZ,EAAc,CAAd,EAAiBC,GAAjB,CAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjC,QAAMC,QAAQ,GAAGF,GAAG,CAACE,QAArB;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,IAAJ,CAASC,GAApB,CAAjB;AACA,QAAMC,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACM,IAAJ,CAASG,GAApB,CAAhB;AACA,QAAMC,SAAS,GAAGN,IAAI,CAACC,KAAL,CAAWL,GAAG,CAACW,UAAJ,CAAeX,GAA1B,CAAlB;AACA,WACE;AAAK,MAAA,GAAG,EAAEC,GAAV;AAAe,MAAA,SAAS,EAAEvB,WAAW,CAACsB,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEtB,WAAW,CAACkC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE;AAAEC,QAAAA,IAAI,YAAKZ,GAAL;AAAN,OAAb;AAAiC,MAAA,MAAM,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgDhB,QAAhD,CAAP,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE;AAAE4B,QAAAA,IAAI,YAAKZ,GAAG,GAAC,CAAT;AAAN,OAAb;AAAmC,MAAA,MAAM,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoDhB,QAApD,CAAJ,CAFF,CADF,EAKE;AAAK,MAAA,GAAG,EAAET,OAAO,CAACwB,GAAG,CAACc,OAAJ,CAAY,CAAZ,EAAeC,IAAhB,CAAjB;AAAwC,MAAA,GAAG,EAAEf,GAAG,CAACc,OAAJ,CAAY,CAAZ,EAAeE,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASvC,UAAU,CAACuB,GAAG,CAACc,OAAJ,CAAY,CAAZ,EAAeE,WAAhB,CAAnB,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIb,QAAJ,cAAuBK,OAAvB,UAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQE,SAAR,UARF,CADF;AAYD,GAjBD,CAFJ,CAHF,CADF;AA4BD,CAtCD;;KAAM9B,K;;AA2DN,eAAeA,KAAf","sourcesContent":["/*\n\nPrec %\nWind Dir / Speed\nHumidity %\n\n*/\n\nimport Link from 'next/link';\nimport Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport dailyStyles from './daily.module.scss';\n\nimport Layout from '../../components/layout/layout';\n\nconst Daily = ({ location, daily }) => {\n  console.log(daily)\n  const datetime = Date.now();\n  const { city, state } = location.components;\n  let link;\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n  return (\n    <Layout>\n      <Link href={`/city/weather?city=${city}`}><a className={dailyStyles.back}>&#8592; Go back</a></Link>\n      <h1 className={dailyStyles.title}>{ link.toUpperCase() }</h1>\n      <div className={dailyStyles.container}>\n        {\n          daily.slice(0,5).map((day, idx) => {\n            const humidity = day.humidity;\n            const highTemp = Math.floor(day.temp.max);\n            const lowTemp = Math.floor(day.temp.min);\n            const feelsLike = Math.floor(day.feels_like.day);\n            return (\n              <div key={idx} className={dailyStyles.day}>\n                <div className={dailyStyles.dayTitle}>\n                  <small><Moment add={{ days: `${idx}` }} format=\"dddd\">{datetime}</Moment></small>\n                  <h2><Moment add={{ days: `${idx+1}` }} format=\"DD MMM\">{datetime}</Moment></h2>\n                </div>\n                <img src={getIcon(day.weather[0].icon)} alt={day.weather[0].description} />\n                <small>{ capitalize(day.weather[0].description) }</small>\n                <p>{highTemp}&deg;F / {lowTemp}&deg;F</p>\n                <small>{feelsLike}&deg;F</small>\n              </div>\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0],\n      daily: weather_data.daily\n    }\n  }\n}\n\nexport default Daily;"]},"metadata":{},"sourceType":"module"}