{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/Documents/github-repository/nextjs-weather/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n/*\n\nTODO\n= Adjust CSS so it isn't redundant\n    - Color scheme\n= Submit button should work when enter is clicked\n= Break up functions\n= adjust text sizes\n    - title size and \n    - nav size for mobile\n= README.md\n= random cities should be clickable to get more information\n\n*/\nimport Layout from '../components/layout/layout';\nimport utilStyles from '../styles/utils.module.scss';\nimport { capitalize } from '../utils/stringHelper';\nconst Homepage = ({\n  name,\n  weather\n}) => {\n  const temp = Math.floor(weather.current.temp);\n  const desc = capitalize(weather.current.weather[0].description);\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: `${utilStyles.title} ${utilStyles.mb1}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, name), __jsx(\"h2\", {\n    className: `${utilStyles.subtitle} ${utilStyles.mb5}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, temp, \" \\xB0C with \", desc), __jsx(\"p\", {\n    className: `${utilStyles.doubleSize} ${utilStyles.primaryText} ${utilStyles.mt3}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Want a different city?\"), __jsx(\"p\", {\n    className: `${utilStyles.doubleSize} ${utilStyles.primaryText}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"More information?\"), __jsx(\"p\", {\n    className: `${utilStyles.doubleSize} ${utilStyles.primaryText}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"See further into the day or week?\"), __jsx(\"p\", {\n    className: `${utilStyles.doubleSize}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Search for new cities above!\"));\n};\nexport async function getServerSideProps(ctx) {\n  const cities = [{\n    name: 'Boulder, CO, USA',\n    lat: 40.014984,\n    lng: -105.270546\n  }, {\n    name: 'Windsor, Canada',\n    lat: 42.317432,\n    lng: -83.026772\n  }, {\n    name: 'Yosemite, CA, USA',\n    lat: 37.865101,\n    lng: -119.538330\n  }, {\n    name: 'Moscow, Russia',\n    lat: 55.766174,\n    lng: 37.610561\n  }, {\n    name: 'Mexico City, Mexico',\n    lat: 19.432526,\n    lng: -99.194954\n  }, {\n    name: 'Paris, France',\n    lat: 48.855701,\n    lng: 2.317000\n  }, {\n    name: 'Vienna, Austria',\n    lat: 48.108334,\n    lng: 16.316944\n  }, {\n    name: 'Chicago, IL, USA',\n    lat: 41.913399,\n    lng: -87.648201\n  }, {\n    name: 'Sao Paulo, Brazil',\n    lat: -23.566221,\n    lng: -46.667358\n  }, {\n    name: 'Cape Town, South Africa',\n    lat: -33.927551,\n    lng: 18.457073\n  }];\n  const city = cities[Math.floor(Math.random() * cities.length)];\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${city.lat}&lon=${city.lng}&appid=${process.env.WEATHER_API}&units=metric`);\n  const weather_data = await weather_res.json();\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      name: city.name,\n      weather: weather_data\n    }\n  };\n}\nexport default Homepage;","map":{"version":3,"names":["Layout","utilStyles","capitalize","Homepage","name","weather","temp","Math","floor","current","desc","description","__jsx","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","title","mb1","subtitle","mb5","doubleSize","primaryText","mt3","getServerSideProps","ctx","cities","lat","lng","city","random","length","weather_res","fetch","process","env","WEATHER_API","weather_data","json","console","log","props"],"sources":["/Users/daveregg/Documents/github-repository/nextjs-weather/pages/index.js"],"sourcesContent":["/*\n\nTODO\n= Adjust CSS so it isn't redundant\n    - Color scheme\n= Submit button should work when enter is clicked\n= Break up functions\n= adjust text sizes\n    - title size and \n    - nav size for mobile\n= README.md\n= random cities should be clickable to get more information\n\n*/\nimport Layout from '../components/layout/layout';\nimport utilStyles from '../styles/utils.module.scss';\nimport { capitalize } from '../utils/stringHelper';\n\nconst Homepage = ({ name, weather }) => {\n  const temp = Math.floor(weather.current.temp);\n  const desc = capitalize(weather.current.weather[0].description);\n  return (\n    <Layout>\n      <h1 className={`${utilStyles.title} ${utilStyles.mb1}`}>{name}</h1>\n      <h2 className={`${utilStyles.subtitle} ${utilStyles.mb5}`}>\n        {temp} &deg;C with {desc}\n      </h2>\n      <p className={`${utilStyles.doubleSize} ${utilStyles.primaryText} ${utilStyles.mt3}`}>\n        Want a different city?\n      </p>\n      <p className={`${utilStyles.doubleSize} ${utilStyles.primaryText}`}>\n        More information?\n      </p>\n      <p className={`${utilStyles.doubleSize} ${utilStyles.primaryText}`}>\n        See further into the day or week?\n      </p>\n      <p className={`${utilStyles.doubleSize}`}>\n        Search for new cities above!\n      </p>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const cities = [\n    {\n      name: 'Boulder, CO, USA',\n      lat: 40.014984,\n      lng: -105.270546\n    },\n    {\n      name: 'Windsor, Canada',\n      lat: 42.317432,\n      lng: -83.026772\n    },\n    {\n      name: 'Yosemite, CA, USA',\n      lat: 37.865101,\n      lng: -119.538330\n    },\n    {\n      name: 'Moscow, Russia',\n      lat: 55.766174,\n      lng: 37.610561\n    },\n    {\n      name: 'Mexico City, Mexico',\n      lat: 19.432526,\n      lng: -99.194954\n    },\n    {\n      name: 'Paris, France',\n      lat: 48.855701,\n      lng: 2.317000\n    },\n    {\n      name: 'Vienna, Austria',\n      lat: 48.108334,\n      lng: 16.316944\n    },\n    {\n      name: 'Chicago, IL, USA',\n      lat: 41.913399,\n      lng: -87.648201\n    },\n    {\n      name: 'Sao Paulo, Brazil',\n      lat: -23.566221,\n      lng: -46.667358\n    },\n    {\n      name: 'Cape Town, South Africa',\n      lat: -33.927551,\n      lng: 18.457073\n    }\n  ];\n  const city = cities[Math.floor(Math.random() * cities.length)];\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${city.lat}&lon=${city.lng}&appid=${process.env.WEATHER_API}&units=metric`);\n  const weather_data = await weather_res.json();\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      name: city.name,\n      weather: weather_data\n    }\n  }\n}\n\nexport default Homepage;"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAM,MAAM,6BAA6B;AAChD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,SAASC,UAAU,QAAQ,uBAAuB;AAElD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACtC,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,OAAO,CAACH,IAAI,CAAC;EAC7C,MAAMI,IAAI,GAAGR,UAAU,CAACG,OAAO,CAACI,OAAO,CAACJ,OAAO,CAAC,CAAC,CAAC,CAACM,WAAW,CAAC;EAC/D,OACEC,KAAA,CAACZ,MAAM;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACLN,KAAA;IAAIO,SAAS,EAAG,GAAElB,UAAU,CAACmB,KAAM,IAAGnB,UAAU,CAACoB,GAAI,EAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,IAAS,CAAC,EACnEQ,KAAA;IAAIO,SAAS,EAAG,GAAElB,UAAU,CAACqB,QAAS,IAAGrB,UAAU,CAACsB,GAAI,EAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvDZ,IAAI,kBAAeI,IAClB,CAAC,EACLE,KAAA;IAAGO,SAAS,EAAG,GAAElB,UAAU,CAACuB,UAAW,IAAGvB,UAAU,CAACwB,WAAY,IAAGxB,UAAU,CAACyB,GAAI,EAAE;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,2BAElF,CAAC,EACJN,KAAA;IAAGO,SAAS,EAAG,GAAElB,UAAU,CAACuB,UAAW,IAAGvB,UAAU,CAACwB,WAAY,EAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,sBAEhE,CAAC,EACJN,KAAA;IAAGO,SAAS,EAAG,GAAElB,UAAU,CAACuB,UAAW,IAAGvB,UAAU,CAACwB,WAAY,EAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,sCAEhE,CAAC,EACJN,KAAA;IAAGO,SAAS,EAAG,GAAElB,UAAU,CAACuB,UAAW,EAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,iCAEtC,CACG,CAAC;AAEb,CAAC;AAED,OAAO,eAAeS,kBAAkBA,CAACC,GAAG,EAAE;EAC5C,MAAMC,MAAM,GAAG,CACb;IACEzB,IAAI,EAAE,kBAAkB;IACxB0B,GAAG,EAAE,SAAS;IACdC,GAAG,EAAE,CAAC;EACR,CAAC,EACD;IACE3B,IAAI,EAAE,iBAAiB;IACvB0B,GAAG,EAAE,SAAS;IACdC,GAAG,EAAE,CAAC;EACR,CAAC,EACD;IACE3B,IAAI,EAAE,mBAAmB;IACzB0B,GAAG,EAAE,SAAS;IACdC,GAAG,EAAE,CAAC;EACR,CAAC,EACD;IACE3B,IAAI,EAAE,gBAAgB;IACtB0B,GAAG,EAAE,SAAS;IACdC,GAAG,EAAE;EACP,CAAC,EACD;IACE3B,IAAI,EAAE,qBAAqB;IAC3B0B,GAAG,EAAE,SAAS;IACdC,GAAG,EAAE,CAAC;EACR,CAAC,EACD;IACE3B,IAAI,EAAE,eAAe;IACrB0B,GAAG,EAAE,SAAS;IACdC,GAAG,EAAE;EACP,CAAC,EACD;IACE3B,IAAI,EAAE,iBAAiB;IACvB0B,GAAG,EAAE,SAAS;IACdC,GAAG,EAAE;EACP,CAAC,EACD;IACE3B,IAAI,EAAE,kBAAkB;IACxB0B,GAAG,EAAE,SAAS;IACdC,GAAG,EAAE,CAAC;EACR,CAAC,EACD;IACE3B,IAAI,EAAE,mBAAmB;IACzB0B,GAAG,EAAE,CAAC,SAAS;IACfC,GAAG,EAAE,CAAC;EACR,CAAC,EACD;IACE3B,IAAI,EAAE,yBAAyB;IAC/B0B,GAAG,EAAE,CAAC,SAAS;IACfC,GAAG,EAAE;EACP,CAAC,CACF;EACD,MAAMC,IAAI,GAAGH,MAAM,CAACtB,IAAI,CAACC,KAAK,CAACD,IAAI,CAAC0B,MAAM,CAAC,CAAC,GAAGJ,MAAM,CAACK,MAAM,CAAC,CAAC;EAC9D;EACA,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAAE,uDAAsDJ,IAAI,CAACF,GAAI,QAAOE,IAAI,CAACD,GAAI,UAASM,OAAO,CAACC,GAAG,CAACC,WAAY,eAAc,CAAC;EAChK,MAAMC,YAAY,GAAG,MAAML,WAAW,CAACM,IAAI,CAAC,CAAC;EAE7CC,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;EACzB;EACA,OAAO;IACLI,KAAK,EAAE;MACLxC,IAAI,EAAE4B,IAAI,CAAC5B,IAAI;MACfC,OAAO,EAAEmC;IACX;EACF,CAAC;AACH;AAEA,eAAerC,QAAQ"},"metadata":{},"sourceType":"module"}