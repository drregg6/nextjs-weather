{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n\nUse a grid instead of flexbox\nIn order to generate hourly into two rows\n\n*/\nimport Moment from 'react-moment';\nimport hourlyStyles from './hourly.module.scss';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\n\nconst Hourly = ({\n  hourly,\n  datetime\n}) => {\n  console.log(hourly);\n  return __jsx(\"div\", {\n    className: hourlyStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: hourlyStyles.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Twelve hour forecast\"), __jsx(\"div\", {\n    className: hourlyStyles.forecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, hourly.slice(0, 6).map((hour, idx) => {\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      key: idx,\n      className: hourlyStyles.hour,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }\n    }, __jsx(Moment, {\n      add: {\n        hours: `${idx}`\n      },\n      format: \"H:mm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 22\n      }\n    }, datetime)), __jsx(\"div\", {\n      className: hourlyStyles.details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 19\n      }\n    }, __jsx(\"img\", {\n      src: getIcon(hour.weather[0].icon),\n      alt: hour.weather[0].description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, \"Temp: \", Math.floor(hour.temp), \"\\xB0\"))), __jsx(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }));\n  })));\n};\n\nexport default Hourly;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/hourly.js"],"names":["Moment","hourlyStyles","getIcon","capitalize","Hourly","hourly","datetime","console","log","container","subtitle","forecast","slice","map","hour","idx","hours","details","weather","icon","description","Math","floor","temp"],"mappings":";;;;AAAA;;;;;;AAOA,OAAOA,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AAEA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA0B;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAEJ,YAAY,CAACQ,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAER,YAAY,CAACS,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAK,IAAA,SAAS,EAAET,YAAY,CAACU,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIN,MAAM,CAACO,KAAP,CAAa,CAAb,EAAe,CAAf,EAAkBC,GAAlB,CAAsB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACnC,WACE,4BACE;AAAK,MAAA,GAAG,EAAEA,GAAV;AAAe,MAAA,SAAS,EAAEd,YAAY,CAACa,IAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAG,MAAC,MAAD;AAAQ,MAAA,GAAG,EAAE;AAAEE,QAAAA,KAAK,EAAG,GAAED,GAAI;AAAhB,OAAb;AAAkC,MAAA,MAAM,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDT,QAAjD,CAAH,CADF,EAEE;AAAK,MAAA,SAAS,EAAEL,YAAY,CAACgB,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEf,OAAO,CAACY,IAAI,CAACI,OAAL,CAAa,CAAb,EAAgBC,IAAjB,CAAjB;AAAyC,MAAA,GAAG,EAAEL,IAAI,CAACI,OAAL,CAAa,CAAb,EAAgBE,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUC,IAAI,CAACC,KAAL,CAAWR,IAAI,CAACS,IAAhB,CAAV,SAFF,CAFF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD,GAbD,CAFJ,CAFF,CADF;AAuBD,CAzBD;;AA2BA,eAAenB,MAAf","sourcesContent":["/*\n\nUse a grid instead of flexbox\nIn order to generate hourly into two rows\n\n*/\n\nimport Moment from 'react-moment';\nimport hourlyStyles from './hourly.module.scss';\n\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\n\nconst Hourly = ({ hourly, datetime }) => {\n  console.log(hourly);\n  return (\n    <div className={hourlyStyles.container}>\n      <h1 className={hourlyStyles.subtitle}>Twelve hour forecast</h1>\n      <div className={hourlyStyles.forecast}>\n        {\n          hourly.slice(0,6).map((hour, idx) => {\n            return (\n              <>\n                <div key={idx} className={hourlyStyles.hour}>\n                  <p><Moment add={{ hours: `${idx}` }} format=\"H:mm\">{datetime}</Moment></p>\n                  <div className={hourlyStyles.details}>\n                    <img src={getIcon(hour.weather[0].icon)} alt={hour.weather[0].description} />\n                    <p>Temp: {Math.floor(hour.temp)}&deg;</p>\n                  </div>\n                </div>\n                <hr />\n              </>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Hourly;"]},"metadata":{},"sourceType":"module"}