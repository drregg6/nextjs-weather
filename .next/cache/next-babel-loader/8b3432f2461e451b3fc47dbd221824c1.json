{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/[weather].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/layout'; // Will return weather from the search query\n\nconst Weather = props => {\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, \"You've hit Weather\")));\n};\n\nexport async function getServerSideProps(ctx) {\n  const res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const data = await res.json(); // access lat and long from data\n\n  const {\n    lat,\n    lng\n  } = data.results[0].geometry;\n  console.log(lat, lng); // search for weather data with lat and long data\n\n  const res_2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const data_2 = await res_2.json();\n  console.log(data_2); // return to props\n\n  return {\n    props: {\n      results: data.results\n    }\n  };\n}\nexport default Weather;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/[weather].js"],"names":["Layout","Weather","props","getServerSideProps","ctx","res","fetch","query","city","data","json","lat","lng","results","geometry","console","log","res_2","process","env","WEATHER_API","data_2"],"mappings":";;;AAEA,OAAOA,MAAP,MAAmB,yBAAnB,C,CAEA;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,CADF;AAOD,CARD;;AAUA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAuC;AAC5C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,uFAAsFF,GAAG,CAACG,KAAJ,CAAUC,IAAK,EAAvG,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB,CAF4C,CAG5C;;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeH,IAAI,CAACI,OAAL,CAAa,CAAb,EAAgBC,QAArC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ,EAAiBC,GAAjB,EAL4C,CAM5C;;AACA,QAAMK,KAAK,GAAG,MAAMX,KAAK,CAAE,uDAAsDK,GAAI,QAAOC,GAAI,UAASM,OAAO,CAACC,GAAR,CAAYC,WAAY,iBAAxG,CAAzB;AACA,QAAMC,MAAM,GAAG,MAAMJ,KAAK,CAACP,IAAN,EAArB;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAV4C,CAY5C;;AACA,SAAO;AACLnB,IAAAA,KAAK,EAAE;AACLW,MAAAA,OAAO,EAAEJ,IAAI,CAACI;AADT;AADF,GAAP;AAKD;AAED,eAAeZ,OAAf","sourcesContent":["\n\nimport Layout from '../../components/layout';\n\n// Will return weather from the search query\nconst Weather = (props) => {\n  return (\n    <Layout>\n      <div>\n        <h1>You've hit Weather</h1>\n      </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const data = await res.json();\n  // access lat and long from data\n  const { lat, lng } = data.results[0].geometry;\n  console.log(lat, lng)\n  // search for weather data with lat and long data\n  const res_2 = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const data_2 = await res_2.json()\n\n  console.log(data_2);\n\n  // return to props\n  return {\n    props: {\n      results: data.results\n    }\n  }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}