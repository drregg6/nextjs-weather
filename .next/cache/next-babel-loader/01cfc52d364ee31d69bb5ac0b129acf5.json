{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n\nPrec %\nWind Dir / Speed\nHumidity %\n\n*/\nimport Link from 'next/link';\nimport Moment from 'react-moment';\nimport { getIcon, toCelsius, toFahrenheit } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport dailyStyles from './daily.module.scss';\nimport Layout from '../../components/layout/layout';\nimport Day from '../../components/daily/day';\n\nvar Daily = function Daily(_ref) {\n  var location = _ref.location,\n      daily = _ref.daily;\n  console.log(daily);\n  var isFahrenheit = true;\n  var isCelsius = false;\n  var datetime = Date.now();\n  var _location$components = location.components,\n      city = _location$components.city,\n      state = _location$components.state;\n  var link;\n\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  var handleFahrenheit = function handleFahrenheit() {};\n\n  var handleCelsius = function handleCelsius() {};\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: dailyStyles.top,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/city/weather?city=\".concat(city),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: dailyStyles.back,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 51\n    }\n  }, \"\\u2190 Go back\")), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, \"\\xB0C\"), \" | \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 34\n    }\n  }, \"\\xB0F\"), \" | \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 56\n    }\n  }, \"\\xB0K\"))), __jsx(\"h1\", {\n    className: dailyStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, capitalize(link)), __jsx(\"div\", {\n    className: dailyStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, daily.slice(0, 5).map(function (day, idx) {\n    var _jsx;\n\n    var desc = day.weather[0].description;\n    var icon = day.weather[0].icon;\n    var humidity = day.humidity;\n    var highTemp = Math.floor(day.temp.max);\n    var lowTemp = Math.floor(day.temp.min);\n    var feelsLike = Math.floor(day.feels_like.day);\n    return __jsx(Day, (_jsx = {\n      datetime: datetime,\n      idx: idx,\n      humidity: humidity,\n      highTemp: highTemp,\n      lowTemp: lowTemp,\n      feelsLike: feelsLike,\n      desc: desc,\n      icon: icon\n    }, _defineProperty(_jsx, \"humidity\", humidity), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }), _jsx));\n  })));\n};\n\n_c = Daily;\nexport var __N_SSP = true;\nexport default Daily;\n\nvar _c;\n\n$RefreshReg$(_c, \"Daily\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js"],"names":["Link","Moment","getIcon","toCelsius","toFahrenheit","capitalize","dailyStyles","Layout","Day","Daily","location","daily","console","log","isFahrenheit","isCelsius","datetime","Date","now","components","city","state","link","undefined","toLowerCase","handleFahrenheit","handleCelsius","top","back","title","container","slice","map","day","idx","desc","weather","description","icon","humidity","highTemp","Math","floor","temp","max","lowTemp","min","feelsLike","feels_like"],"mappings":"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","sourcesContent":["/*\n\nPrec %\nWind Dir / Speed\nHumidity %\n\n*/\n\nimport Link from 'next/link';\nimport Moment from 'react-moment';\nimport {\n  getIcon,\n  toCelsius,\n  toFahrenheit\n} from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport dailyStyles from './daily.module.scss';\n\nimport Layout from '../../components/layout/layout';\nimport Day from '../../components/daily/day';\n\nconst Daily = ({ location, daily }) => {\n  console.log(daily)\n  let isFahrenheit = true;\n  let isCelsius = false;\n  const datetime = Date.now();\n  const { city, state } = location.components;\n  let link;\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  const handleFahrenheit = () => {\n\n  }\n  const handleCelsius = () => {\n\n  }\n\n  return (\n    <Layout>\n      <div className={dailyStyles.top}>\n        <Link href={`/city/weather?city=${city}`}><a className={dailyStyles.back}>&#8592; Go back</a></Link>\n        <p><span>&deg;C</span> | <span>&deg;F</span> | <span>&deg;K</span></p>\n      </div>\n      <h1 className={dailyStyles.title}>{ capitalize(link) }</h1>\n      <div className={dailyStyles.container}>\n        {\n          daily.slice(0,5).map((day, idx) => {\n            const desc = day.weather[0].description;\n            const icon = day.weather[0].icon;\n            const humidity = day.humidity;\n            const highTemp = Math.floor(day.temp.max);\n            const lowTemp = Math.floor(day.temp.min);\n            const feelsLike = Math.floor(day.feels_like.day);\n            return (\n              <Day\n                datetime={datetime}\n                idx={idx}\n                humidity={humidity}\n                highTemp={highTemp}\n                lowTemp={lowTemp}\n                feelsLike={feelsLike}\n                desc={desc}\n                icon={icon}\n                humidity={humidity}\n              />\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0],\n      daily: weather_data.daily\n    }\n  }\n}\n\nexport default Daily;"]},"metadata":{},"sourceType":"module"}