{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/current.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getIcon } from '../../utils/weatherHelper';\n\nvar Current = function Current(_ref) {\n  var current = _ref.current;\n  console.log(current);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: getIcon(current.weather[0].id),\n    alt: current.weather[0].description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Temp: \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 18\n    }\n  }, Math.floor(current.temp), \"\\xB0\")), __jsx(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Feels like: \", __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 28\n    }\n  }, Math.floor(current.feels_like), \"\\xB0\"))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"Weather: \", \"\".concat(current.weather[0].description.charAt(0).toUpperCase() + current.weather[0].description.slice(1).toLowerCase()))));\n};\n\n_c = Current;\nexport default Current;\n\nvar _c;\n\n$RefreshReg$(_c, \"Current\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/weather/current.js"],"names":["getIcon","Current","current","console","log","weather","id","description","Math","floor","temp","feels_like","charAt","toUpperCase","slice","toLowerCase"],"mappings":";;;;;AAAA,SAASA,OAAT,QAAwB,2BAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,OAAO,CAACE,OAAO,CAACG,OAAR,CAAgB,CAAhB,EAAmBC,EAApB,CAAjB;AAA0C,IAAA,GAAG,EAAEJ,OAAO,CAACG,OAAR,CAAgB,CAAhB,EAAmBE,WAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOC,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACQ,IAAnB,CAAP,SAAT,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,IAAI,CAACC,KAAL,CAAWP,OAAO,CAACS,UAAnB,CAAP,SAAnB,CAFF,CAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAgBT,OAAO,CAACG,OAAR,CAAgB,CAAhB,EAAmBE,WAAnB,CAA+BK,MAA/B,CAAsC,CAAtC,EAAyCC,WAAzC,KAAyDX,OAAO,CAACG,OAAR,CAAgB,CAAhB,EAAmBE,WAAnB,CAA+BO,KAA/B,CAAqC,CAArC,EAAwCC,WAAxC,EAAzE,EADF,CARF,CADF;AAcD,CAhBD;;KAAMd,O;AAkBN,eAAeA,OAAf","sourcesContent":["import { getIcon } from '../../utils/weatherHelper';\n\nconst Current = ({ current }) => {\n  console.log(current)\n  return (\n    <div>\n      <div>\n        <img src={getIcon(current.weather[0].id)} alt={current.weather[0].description} />\n      </div>\n      <div>\n        <p>Temp: <span>{Math.floor(current.temp)}&deg;</span></p>\n        <small>Feels like: <span>{Math.floor(current.feels_like)}&deg;</span></small>\n      </div>\n      <div>\n        <p>Weather: {`${current.weather[0].description.charAt(0).toUpperCase() + current.weather[0].description.slice(1).toLowerCase()}`}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Current;"]},"metadata":{},"sourceType":"module"}