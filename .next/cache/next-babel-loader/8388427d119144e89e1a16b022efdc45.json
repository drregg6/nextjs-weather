{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n\nPrec %\nWind Dir / Speed\nHumidity %\n\n*/\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { changeUnit } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport dailyStyles from './daily.module.scss';\nimport Layout from '../../components/layout/layout';\nimport Day from '../../components/daily/day';\n\nconst Daily = ({\n  location,\n  daily\n}) => {\n  const {\n    0: units,\n    1: changeUnits\n  } = useState({\n    isFahrenheit: false,\n    isCelsius: true,\n    isKelvin: false\n  });\n  let {\n    isFahrenheit,\n    isCelsius\n  } = units;\n  const datetime = Date.now();\n  const {\n    city,\n    state\n  } = location.components;\n  let link;\n\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  const handleFahrenheit = () => {\n    changeUnits({\n      isFahrenheit: true,\n      isCelsius: false,\n      isKelvin: false\n    });\n  };\n\n  const handleCelsius = () => {\n    changeUnits({\n      isFahrenheit: false,\n      isCelsius: true,\n      isKelvin: false\n    });\n  };\n\n  const handleKelvin = () => {\n    changeUnits({\n      isFahrenheit: false,\n      isCelsius: false,\n      isKelvin: true\n    });\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: dailyStyles.top,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: `/city/weather?city=${city}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    className: dailyStyles.back,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 51\n    }\n  }, \"\\u2190 Go back\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    onClick: handleCelsius,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }\n  }, \"\\xB0C\"), \" | \", __jsx(\"span\", {\n    onClick: handleFahrenheit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 58\n    }\n  }, \"\\xB0F\"), \" | \", __jsx(\"span\", {\n    onClick: handleKelvin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 107\n    }\n  }, \"\\xB0K\"))), __jsx(\"h1\", {\n    className: dailyStyles.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, capitalize(link)), __jsx(\"div\", {\n    className: dailyStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, daily.map((day, idx) => {\n    const desc = day.weather[0].description;\n    const icon = day.weather[0].icon;\n    const humidity = day.humidity;\n    let highTemp = Math.floor(day.temp.max);\n    let lowTemp = Math.floor(day.temp.min);\n    let feelsLike = Math.floor(day.feels_like.day);\n\n    if (isFahrenheit) {\n      highTemp = changeUnit(highTemp, 'f');\n      lowTemp = changeUnit(lowTemp, 'f');\n      feelsLike = changeUnit(feelsLike, 'f');\n    } else if (isCelsius) {\n      highTemp = changeUnit(highTemp, 'c');\n      lowTemp = changeUnit(lowTemp, 'c');\n      feelsLike = changeUnit(feelsLike, 'c');\n    } else {\n      highTemp = changeUnit(highTemp, 'k');\n      lowTemp = changeUnit(lowTemp, 'k');\n      feelsLike = changeUnit(feelsLike, 'k');\n    }\n\n    return __jsx(Day, {\n      datetime: datetime,\n      idx: idx,\n      humidity: humidity,\n      highTemp: highTemp,\n      lowTemp: lowTemp,\n      feelsLike: feelsLike,\n      isFahrenheit: isFahrenheit,\n      isCelsius: isCelsius,\n      desc: desc,\n      icon: icon,\n      humidity: humidity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    });\n  })));\n};\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json(); // access lat and long from data\n\n  const {\n    lat,\n    lng\n  } = loc_data.results[0].geometry; // search for weather data with lat and long data\n\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}`);\n  const weather_data = await weather_res.json();\n  console.log(weather_data); // return to props\n\n  return {\n    props: {\n      location: loc_data.results[0],\n      daily: weather_data.daily\n    }\n  };\n}\nexport default Daily;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js"],"names":["useState","Link","changeUnit","capitalize","dailyStyles","Layout","Day","Daily","location","daily","units","changeUnits","isFahrenheit","isCelsius","isKelvin","datetime","Date","now","city","state","components","link","undefined","toLowerCase","handleFahrenheit","handleCelsius","handleKelvin","top","back","title","container","map","day","idx","desc","weather","description","icon","humidity","highTemp","Math","floor","temp","max","lowTemp","min","feelsLike","feels_like","getServerSideProps","ctx","loc_res","fetch","query","loc_data","json","lat","lng","results","geometry","weather_res","process","env","WEATHER_API","weather_data","console","log","props"],"mappings":"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","sourcesContent":["/*\n\nPrec %\nWind Dir / Speed\nHumidity %\n\n*/\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { changeUnit } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport dailyStyles from './daily.module.scss';\n\nimport Layout from '../../components/layout/layout';\nimport Day from '../../components/daily/day';\n\nconst Daily = ({ location, daily }) => {\n  const [ units, changeUnits ] = useState({\n    isFahrenheit: false,\n    isCelsius: true,\n    isKelvin: false\n  });\n  let { isFahrenheit, isCelsius } = units;\n  \n  const datetime = Date.now();\n  const { city, state } = location.components;\n  let link;\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  const handleFahrenheit = () => {\n    changeUnits({\n      isFahrenheit: true,\n      isCelsius: false,\n      isKelvin: false\n    });\n  }\n  const handleCelsius = () => {\n    changeUnits({\n      isFahrenheit: false,\n      isCelsius: true,\n      isKelvin: false\n    });\n  }\n  const handleKelvin = () => {\n    changeUnits({\n      isFahrenheit: false,\n      isCelsius: false,\n      isKelvin: true\n    })\n  }\n\n  return (\n    <Layout>\n      <div className={dailyStyles.top}>\n        <Link href={`/city/weather?city=${city}`}><a className={dailyStyles.back}>&#8592; Go back</a></Link>\n        <p><span onClick={handleCelsius}>&deg;C</span> | <span onClick={handleFahrenheit}>&deg;F</span> | <span onClick={handleKelvin}>&deg;K</span></p>\n      </div>\n      <h1 className={dailyStyles.title}>{ capitalize(link) }</h1>\n      <div className={dailyStyles.container}>\n        {\n          daily.map((day, idx) => {\n            const desc = day.weather[0].description;\n            const icon = day.weather[0].icon;\n            const humidity = day.humidity;\n            let highTemp = Math.floor(day.temp.max);\n            let lowTemp = Math.floor(day.temp.min);\n            let feelsLike = Math.floor(day.feels_like.day);\n            if (isFahrenheit) {\n              highTemp = changeUnit(highTemp, 'f');\n              lowTemp = changeUnit(lowTemp, 'f');\n              feelsLike = changeUnit(feelsLike, 'f');\n            } else if (isCelsius) {\n              highTemp = changeUnit(highTemp, 'c');\n              lowTemp = changeUnit(lowTemp, 'c');\n              feelsLike = changeUnit(feelsLike, 'c');\n            } else {\n              highTemp = changeUnit(highTemp, 'k');\n              lowTemp = changeUnit(lowTemp, 'k');\n              feelsLike = changeUnit(feelsLike, 'k');\n            }\n            return (\n              <Day\n                datetime={datetime}\n                idx={idx}\n                humidity={humidity}\n                highTemp={highTemp}\n                lowTemp={lowTemp}\n                feelsLike={feelsLike}\n                isFahrenheit={isFahrenheit}\n                isCelsius={isCelsius}\n                desc={desc}\n                icon={icon}\n                humidity={humidity}\n              />\n            )\n          })\n        }\n      </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0],\n      daily: weather_data.daily\n    }\n  }\n}\n\nexport default Daily;"]},"metadata":{},"sourceType":"module"}