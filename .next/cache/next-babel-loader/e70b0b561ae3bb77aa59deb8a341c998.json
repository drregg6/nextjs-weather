{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/[weather].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/*\n\nTODO\n= break up functions\n= color scheme\n\n*/\nimport { useState } from 'react';\nimport weatherStyles from './weather.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\nimport Layout from '../../components/layout/layout';\nimport Current from '../../components/weather/current';\nimport Hourly from '../../components/weather/hourly';\nimport Daily from '../../components/weather/daily'; // Will return weather from the search query\n\nvar Weather = function Weather(_ref) {\n  _s();\n\n  var weather = _ref.weather,\n      location = _ref.location;\n\n  var _useState = useState({\n    isFahrenheit: false,\n    isCelsius: true,\n    isKelvin: false\n  }),\n      units = _useState[0],\n      changeUnits = _useState[1];\n\n  var isFahrenheit = units.isFahrenheit,\n      isCelsius = units.isCelsius;\n  var datetime = Date.now();\n  var _location$components = location.components,\n      city = _location$components.city,\n      state = _location$components.state,\n      state_code = _location$components.state_code,\n      country_code = _location$components.country_code;\n  var link;\n\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  var handleFahrenheit = function handleFahrenheit() {\n    changeUnits({\n      isFahrenheit: true,\n      isCelsius: false,\n      isKelvin: false\n    });\n  };\n\n  var handleCelsius = function handleCelsius() {\n    changeUnits({\n      isFahrenheit: false,\n      isCelsius: true,\n      isKelvin: false\n    });\n  };\n\n  var handleKelvin = function handleKelvin() {\n    changeUnits({\n      isFahrenheit: false,\n      isCelsius: false,\n      isKelvin: true\n    });\n  };\n\n  var current = weather.current;\n  var daily = weather.daily.slice(0, 5);\n  var hourly = weather.hourly.slice(0, 12);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: weatherStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: utilStyles.mtb2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    className: utilStyles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"\".concat(city ? city : state, \", \").concat(state_code !== undefined ? state_code + ',' : '', \" \").concat(country_code.toUpperCase())), __jsx(\"p\", {\n    className: \"\".concat(utilStyles.doubleSize),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    onClick: handleCelsius,\n    className: utilStyles.pointer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 53\n    }\n  }, \"\\xB0C\"), \" | \", __jsx(\"span\", {\n    onClick: handleFahrenheit,\n    className: utilStyles.pointer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 130\n    }\n  }, \"\\xB0F\"), \" | \", __jsx(\"span\", {\n    onClick: handleKelvin,\n    className: utilStyles.pointer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 211\n    }\n  }, \"\\xB0K\"))), __jsx(\"div\", {\n    className: weatherStyles.main,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Hourly, {\n    isFahrenheit: isFahrenheit,\n    isCelsius: isCelsius,\n    link: link,\n    hourly: hourly,\n    datetime: datetime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(Current, {\n    isFahrenheit: isFahrenheit,\n    isCelsius: isCelsius,\n    current: current,\n    datetime: datetime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), __jsx(Daily, {\n    isFahrenheit: isFahrenheit,\n    isCelsius: isCelsius,\n    link: link,\n    daily: daily,\n    datetime: datetime,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(Weather, \"Qe7zmG0ARdmO1H+k7oGptkqRIQU=\");\n\n_c = Weather;\nexport var __N_SSP = true;\nexport default Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/[weather].js"],"names":["useState","weatherStyles","utilStyles","Layout","Current","Hourly","Daily","Weather","weather","location","isFahrenheit","isCelsius","isKelvin","units","changeUnits","datetime","Date","now","components","city","state","state_code","country_code","link","undefined","toLowerCase","handleFahrenheit","handleCelsius","handleKelvin","current","daily","slice","hourly","container","mtb2","title","toUpperCase","doubleSize","pointer","main"],"mappings":"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","sourcesContent":["/*\n\nTODO\n= break up functions\n= color scheme\n\n*/\nimport { useState } from 'react';\nimport weatherStyles from './weather.module.scss';\nimport utilStyles from '../../styles/utils.module.scss';\n\nimport Layout from '../../components/layout/layout';\nimport Current from '../../components/weather/current';\nimport Hourly from '../../components/weather/hourly';\nimport Daily from '../../components/weather/daily';\n\n// Will return weather from the search query\nconst Weather = ({ weather, location }) => {\n  const [ units, changeUnits ] = useState({\n    isFahrenheit: false,\n    isCelsius: true,\n    isKelvin: false\n  });\n  let { isFahrenheit, isCelsius } = units;\n\n  const datetime = Date.now();\n  const { city, state, state_code, country_code } = location.components;\n  let link;\n  if (city !== undefined) {\n    link = city.toLowerCase();\n  } else {\n    link = state.toLowerCase();\n  }\n\n  const handleFahrenheit = () => {\n    changeUnits({\n      isFahrenheit: true,\n      isCelsius: false,\n      isKelvin: false\n    });\n  }\n  const handleCelsius = () => {\n    changeUnits({\n      isFahrenheit: false,\n      isCelsius: true,\n      isKelvin: false\n    });\n  }\n  const handleKelvin = () => {\n    changeUnits({\n      isFahrenheit: false,\n      isCelsius: false,\n      isKelvin: true\n    })\n  }\n\n  const { current } = weather;\n  const daily = weather.daily.slice(0,5)\n  const hourly = weather.hourly.slice(0,12);\n  return (\n    <Layout>\n      <div className={weatherStyles.container}>\n        <div className={utilStyles.mtb2}>\n          <h1 className={utilStyles.title}>{`${city ? city : state}, ${state_code !== undefined ? state_code + ',' : ''} ${country_code.toUpperCase()}`}</h1>\n          <p className={`${utilStyles.doubleSize}`}><span onClick={handleCelsius} className={utilStyles.pointer}>&deg;C</span> | <span onClick={handleFahrenheit}  className={utilStyles.pointer}>&deg;F</span> | <span onClick={handleKelvin}  className={utilStyles.pointer}>&deg;K</span></p>\n        </div>\n        <div className={weatherStyles.main}>\n          <Hourly\n            isFahrenheit={isFahrenheit}\n            isCelsius={isCelsius}\n            link={link}\n            hourly={hourly}\n            datetime={datetime}\n          />\n          <Current\n            isFahrenheit={isFahrenheit}\n            isCelsius={isCelsius}\n            current={current}\n            datetime={datetime}\n          />\n          <Daily\n            isFahrenheit={isFahrenheit}\n            isCelsius={isCelsius}\n            link={link}\n            daily={daily}\n            datetime={datetime}\n          />\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=metric`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0],\n      weather: weather_data\n    }\n  }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}