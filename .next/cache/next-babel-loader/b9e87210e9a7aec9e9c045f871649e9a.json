{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport Layout from '../../components/layout/layout';\n\nconst Daily = ({\n  location,\n  daily\n}) => {\n  const city = 'Philadelphia';\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, \"Hi from Daily\"), __jsx(Link, {\n    href: `/city/weather?city=${city}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 49\n    }\n  }, \"Go back\")));\n};\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json(); // access lat and long from data\n\n  const {\n    lat,\n    lng\n  } = loc_data.results[0].geometry; // search for weather data with lat and long data\n\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json();\n  console.log(weather_data); // return to props\n\n  return {\n    props: {\n      location: loc_data.results[0].components,\n      daily: weather_data.daily\n    }\n  };\n}\nexport default Daily;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/pages/city/daily.js"],"names":["Link","Layout","Daily","location","daily","city","getServerSideProps","ctx","loc_res","fetch","query","loc_data","json","lat","lng","results","geometry","weather_res","process","env","WEATHER_API","weather_data","console","log","props","components"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AACrC,QAAMC,IAAI,GAAG,cAAb;AACA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAG,sBAAqBA,IAAK,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA1C,CAFF,CADF;AAMD,CARD;;AAUA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAuC;AAC5C,QAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,uFAAsFF,GAAG,CAACG,KAAJ,CAAUL,IAAK,EAAvG,CAA3B;AACA,QAAMM,QAAQ,GAAG,MAAMH,OAAO,CAACI,IAAR,EAAvB,CAF4C,CAG5C;;AACA,QAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAeH,QAAQ,CAACI,OAAT,CAAiB,CAAjB,EAAoBC,QAAzC,CAJ4C,CAK5C;;AACA,QAAMC,WAAW,GAAG,MAAMR,KAAK,CAAE,uDAAsDI,GAAI,QAAOC,GAAI,UAASI,OAAO,CAACC,GAAR,CAAYC,WAAY,iBAAxG,CAA/B;AACA,QAAMC,YAAY,GAAG,MAAMJ,WAAW,CAACL,IAAZ,EAA3B;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ,EAT4C,CAU5C;;AACA,SAAO;AACLG,IAAAA,KAAK,EAAE;AACLrB,MAAAA,QAAQ,EAAEQ,QAAQ,CAACI,OAAT,CAAiB,CAAjB,EAAoBU,UADzB;AAELrB,MAAAA,KAAK,EAAEiB,YAAY,CAACjB;AAFf;AADF,GAAP;AAMD;AAED,eAAeF,KAAf","sourcesContent":["import Link from 'next/link';\n\nimport Layout from '../../components/layout/layout';\n\nconst Daily = ({ location, daily }) => {\n  const city = 'Philadelphia';\n  return (\n    <Layout>\n      <h1>Hi from Daily</h1>\n      <Link href={`/city/weather?city=${city}`}><a>Go back</a></Link>\n    </Layout>\n  )\n}\n\nexport async function getServerSideProps(ctx) {\n  const loc_res = await fetch(`https://api.opencagedata.com/geocode/v1/json?key=9509e53adb5442c8829342e5c5b15438&q=${ctx.query.city}`);\n  const loc_data = await loc_res.json();\n  // access lat and long from data\n  const { lat, lng } = loc_data.results[0].geometry;\n  // search for weather data with lat and long data\n  const weather_res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lng}&appid=${process.env.WEATHER_API}&units=imperial`);\n  const weather_data = await weather_res.json()\n\n  console.log(weather_data);\n  // return to props\n  return {\n    props: {\n      location: loc_data.results[0].components,\n      daily: weather_data.daily\n    }\n  }\n}\n\nexport default Daily;"]},"metadata":{},"sourceType":"module"}