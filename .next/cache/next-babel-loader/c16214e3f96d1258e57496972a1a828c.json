{"ast":null,"code":"var _jsxFileName = \"/Users/daveregg/git-repository-projects/nextjs-weather/components/hourly/hour.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\nimport hourStyles from './hour.module.scss';\n\nconst Hour = ({\n  idx,\n  datetime,\n  icon,\n  desc,\n  temp,\n  isFahrenheit,\n  isCelsius,\n  feelsLike,\n  windSpd,\n  windDeg\n}) => {\n  return __jsx(\"div\", {\n    className: hourStyles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Moment, {\n    add: {\n      hours: `${idx}`\n    },\n    format: \"H:mm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, datetime)), __jsx(\"img\", {\n    src: getIcon(icon),\n    alt: desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), __jsx(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, capitalize(desc)), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, temp, \" \\xB0\", isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, feelsLike, \" \\xB0\", isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, windSpd, \" \", windDeg, \" \", isFahrenheit ? 'miles/hr' : 'meter/sec'));\n};\n\nexport default Hour;","map":{"version":3,"sources":["/Users/daveregg/git-repository-projects/nextjs-weather/components/hourly/hour.js"],"names":["Moment","getIcon","capitalize","hourStyles","Hour","idx","datetime","icon","desc","temp","isFahrenheit","isCelsius","feelsLike","windSpd","windDeg","container","hours"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AACZC,EAAAA,GADY;AAEZC,EAAAA,QAFY;AAGZC,EAAAA,IAHY;AAIZC,EAAAA,IAJY;AAKZC,EAAAA,IALY;AAMZC,EAAAA,YANY;AAOZC,EAAAA,SAPY;AAQZC,EAAAA,SARY;AASZC,EAAAA,OATY;AAUZC,EAAAA;AAVY,CAAD,KAWP;AACJ,SACE;AAAK,IAAA,SAAS,EAAEX,UAAU,CAACY,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAE;AAAEC,MAAAA,KAAK,EAAG,GAAEX,GAAI;AAAhB,KAAb;AAAkC,IAAA,MAAM,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiDC,QAAjD,CAAJ,CADF,EAEE;AAAK,IAAA,GAAG,EAAEL,OAAO,CAACM,IAAD,CAAjB;AAAyB,IAAA,GAAG,EAAEC,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQN,UAAU,CAACM,IAAD,CAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,WAAgBC,YAAY,GAAG,GAAH,GAASC,SAAS,GAAG,GAAH,GAAS,GAAvD,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,SAAJ,WAAqBF,YAAY,GAAG,GAAH,GAASC,SAAS,GAAG,GAAH,GAAS,GAA5D,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,OAAJ,OAAcC,OAAd,OAAwBJ,YAAY,GAAG,UAAH,GAAgB,WAApD,CANF,CADF;AAUD,CAtBD;;AAwBA,eAAeN,IAAf","sourcesContent":["import Moment from 'react-moment';\nimport { getIcon } from '../../utils/weatherHelper';\nimport { capitalize } from '../../utils/stringHelper';\n\nimport hourStyles from './hour.module.scss';\n\nconst Hour = ({\n  idx,\n  datetime,\n  icon,\n  desc,\n  temp,\n  isFahrenheit,\n  isCelsius,\n  feelsLike,\n  windSpd,\n  windDeg\n}) => {\n  return (\n    <div className={hourStyles.container}>\n      <h2><Moment add={{ hours: `${idx}` }} format=\"H:mm\">{datetime}</Moment></h2>\n      <img src={getIcon(icon)} alt={desc} />\n      <small>{capitalize(desc)}</small>\n      <p>{temp} &deg;{isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'}</p>\n      <p>{feelsLike} &deg;{isFahrenheit ? 'F' : isCelsius ? 'C' : 'K'}</p>\n      <p>{windSpd} {windDeg} {isFahrenheit ? 'miles/hr' : 'meter/sec'}</p>\n    </div>\n  )\n}\n\nexport default Hour;"]},"metadata":{},"sourceType":"module"}